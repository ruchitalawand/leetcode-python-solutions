# Text Justification

class Solution:
    def fullJustify(self, words: list[str], maxWidth: int) -> list[str]:
        res = []
        i = 0
        n = len(words)

        while i < n:
            # Determine how many words fit into the current line
            line_len = len(words[i])
            j = i + 1
            while j < n and line_len + 1 + len(words[j]) <= maxWidth:
                line_len += 1 + len(words[j])
                j += 1

            line_words = words[i:j]
            num_words = j - i
            line = ""

            # Last line or single word -> left-justify
            if j == n or num_words == 1:
                line = ' '.join(line_words)
                line += ' ' * (maxWidth - len(line))
            else:
                total_spaces = maxWidth - sum(len(word) for word in line_words)
                space_between_words, extra_spaces = divmod(total_spaces, num_words - 1)

                for k in range(num_words - 1):
                    line += line_words[k]
                    line += ' ' * (space_between_words + (1 if k < extra_spaces else 0))
                line += line_words[-1]

            res.append(line)
            i = j

        return res
